{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";// Начальное состояние корзины\nvar initialState={cartItems:[],// Элементы корзины\ntotalQuantity:0,// Общее количество\ntotalAmount:0// Общая сумма\n};// Создаем Redux slice (срез) для управления состоянием корзины\nvar cartSlice=createSlice({name:'cart',// Название среза\ninitialState:initialState,// Исходное состояние\nreducers:{addItem:function addItem(state,action){var newItem=action.payload;// Новые товары\nvar existingItem=state.cartItems.find(function(item){return item.id===newItem.id;});// Существующий элемент\nstate.totalQuantity++;// Увеличиваем общее количество товаров в корзине\nif(!existingItem){// Если товара с таким ID нет в корзине, добавляем новый элемент\nstate.cartItems.push({id:newItem.id,title:newItem.title,image01:newItem.image01,price:newItem.price,quantity:1,totalPrice:newItem.price});}else{// Если товар с таким ID уже есть в корзине, увеличиваем количество и обновляем общую стоимость\nexistingItem.quantity++;existingItem.totalPrice=Number(existingItem.totalPrice)+Number(newItem.price);}// Обновляем общую сумму корзины, просуммировав цену всех товаров в корзине\nstate.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},0);},//умешьшение продукта\nremoveItem:function removeItem(state,action){var id=action.payload;var existingItem=state.cartItems.find(function(item){return item.id===id;});state.totalQuantity--;if(existingItem.quantity===1){state.cartItems=state.cartItems.filter(function(item){return item.id!==id;});}else{existingItem.quantity--;existingItem.totalPrice=Number(existingItem.totalPrice)-Number(existingItem.price);}state.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},0);},//удаление продукта\ndeleteItem:function deleteItem(state,action){var id=action.payload;var existingItem=state.cartItems.find(function(item){return item.id===id;});if(existingItem){state.cartItems=state.cartItems.filter(function(item){return item.id!==id;});state.totalQuantity-=existingItem.quantity;}state.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},0);}}});// Экспортируем действия и редьюсеры для использования в Redux\nexport var cartAction=cartSlice.actions;export default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartAction","actions"],"sources":["C:/ProjectProects/project-pizza/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\n// Начальное состояние корзины\r\nconst initialState = {\r\n    cartItems: [],        // Элементы корзины\r\n    totalQuantity: 0,     // Общее количество\r\n    totalAmount: 0        // Общая сумма\r\n}\r\n\r\n// Создаем Redux slice (срез) для управления состоянием корзины\r\nconst cartSlice = createSlice({\r\n    name: 'cart',               // Название среза\r\n    initialState: initialState,  // Исходное состояние\r\n\r\n    reducers: {\r\n        addItem(state, action) {\r\n            const newItem = action.payload; // Новые товары\r\n            const existingItem = state.cartItems.find(item => item.id === newItem.id); // Существующий элемент\r\n            state.totalQuantity++; // Увеличиваем общее количество товаров в корзине\r\n\r\n            if (!existingItem) {\r\n                // Если товара с таким ID нет в корзине, добавляем новый элемент\r\n                state.cartItems.push(\r\n                    {\r\n                        id: newItem.id,\r\n                        title: newItem.title,\r\n                        image01: newItem.image01,\r\n                        price: newItem.price,\r\n                        quantity: 1,\r\n                        totalPrice: newItem.price,\r\n                    }\r\n                )\r\n            } else {\r\n                // Если товар с таким ID уже есть в корзине, увеличиваем количество и обновляем общую стоимость\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\r\n            }\r\n            // Обновляем общую сумму корзины, просуммировав цену всех товаров в корзине\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                (total + Number(item.price) * Number(item.quantity)), 0);\r\n        },\r\n\r\n        //умешьшение продукта\r\n        removeItem(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.cartItems.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n\r\n            if (existingItem.quantity === 1) {\r\n                state.cartItems = state.cartItems.filter(item => item.id !== id);\r\n\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\r\n            }\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                (total + Number(item.price) * Number(item.quantity)), 0);\r\n        },\r\n\r\n        //удаление продукта\r\n        deleteItem(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.cartItems.find(item => item.id === id);\r\n            \r\n            if (existingItem) {\r\n                state.cartItems = state.cartItems.filter(item => item.id !== id);\r\n                state.totalQuantity -= existingItem.quantity\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                (total + Number(item.price) * Number(item.quantity)), 0);\r\n        },\r\n    }\r\n})\r\n\r\n// Экспортируем действия и редьюсеры для использования в Redux\r\nexport const cartAction = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}